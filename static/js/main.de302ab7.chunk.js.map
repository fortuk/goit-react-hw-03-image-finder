{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/App/App.module.css","components/Button/Button.module.css","components/SearchBar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","api/imagesApi.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js","components/SearchBar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","handleNameChange","event","setState","target","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","s","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","React","Component","ImageGalleryItem","smallImage","largeImage","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","image","webformatURL","largeImageURL","id","axios","defaults","baseURL","apiKey","fetchImagesWithQuery","searchQuery","a","page","response","data","hits","Button","modalRoot","document","querySelector","Modal","onEscClick","code","onClose","onBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","App","results","loading","modalImage","firstFetch","handleSearchbarSubmit","query","fetchImages","imagesApi","then","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","console","log","finally","openModal","imageUrl","closeModal","e","prevProps","Loader","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de302ab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3cOtY\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__NFLG8\",\"ImageGalleryItemImage\":\"ImageGallery_ImageGalleryItemImage__2mJio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1ngiu\",\"Modal\":\"Modal_Modal__dEnCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__zBosM\",\"Loader\":\"App_Loader__3M9MO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Bshm\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { inputValue } = this.state;\n\n    if (inputValue.trim() === '') {\n      toast.error('Error! Enter something');\n      this.setState({ inputValue: '' });\n      return;\n    }\n    this.props.onSubmit(inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputValue}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../ImageGallery/ImageGallery.module.css';\n\nconst ImageGalleryItem = ({ smallImage, largeImage, onClick }) => {\n  return (\n    <li\n      onClick={() => {\n        onClick(largeImage);\n      }}\n    >\n      <img\n        src={smallImage}\n        alt=\"gallaryImg\"\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  smallImage: PropTypes.string.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './ImageGallery.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          smallImage={image.webformatURL}\n          largeImage={image.largeImageURL}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst apiKey = '16763452-f17d9c1e6c077c804b5291364';\n\nconst fetchImagesWithQuery = async (searchQuery, page = 1) => {\n  const response = await axios(\n    `/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return response.data.hits;\n};\n\nexport default { fetchImagesWithQuery };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends React.Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onEscClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onEscClick);\n  }\n\n  onEscClick = event => {\n    const ESC_KEY_CODE = 'Escape';\n\n    if (event.code === ESC_KEY_CODE) {\n      this.props.onClose();\n    }\n  };\n\n  onBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.onBackdropClick}>\n        <div className={s.Modal}>\n          <img src={this.props.largeImageURL} alt={this.props.alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from '../SearchBar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport imagesApi from '../../api/imagesApi';\nimport Button from '../Button/Button';\nimport Loader from 'react-loader-spinner';\nimport Modal from '../Modal/Modal';\nimport s from './App.module.css';\n\nexport default class App extends React.Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    results: [],\n    loading: false,\n    modalImage: null,\n    firstFetch: true,\n  };\n\n  handleSearchbarSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      results: [],\n      page: 1,\n      firstFetch: true,\n    });\n  };\n\n  componentDidMount() { }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    prevQuery !== nextQuery && this.fetchImages();\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({\n      loading: true,\n    });\n\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then(images => {\n        this.setState(prevState => ({\n          results: [...prevState.results, ...images],\n          page: prevState.page + 1,\n        }));\n        if (!this.state.firstFetch) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        this.setState({\n          loading: false,\n          firstFetch: false,\n        });\n      });\n  };\n\n  openModal = imageUrl => {\n    this.setState({ modalImage: imageUrl });\n  };\n\n  closeModal = e => {\n    this.setState({ modalImage: null });\n  };\n\n  render() {\n    const { results, loading, modalImage } = this.state;\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n        <ImageGallery images={results} onClick={this.openModal} />\n        {modalImage && (\n          <Modal largeImage={modalImage} onClose={this.closeModal} />\n        )}\n        {loading && (\n          <div className={s.Loader}>\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n        {results.length > 0 && !loading && (\n          <Button onClick={this.fetchImages} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__S9upa\",\"SearchForm\":\"Searchbar_SearchForm__2sxL3\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1PjhR\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2CprE\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2TNRc\"};"],"sourceRoot":""}